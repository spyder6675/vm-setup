########################
# Testing Variables
donode=
implantip=
c2=

# Making wordlists easily accessible as variables
export dirsmall='/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt'
export dirmed='/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt'
export rockyou='/usr/share/wordlists/rockyou.txt'

### Aliases ###
alias update-rootaliases='rm -rf /root/.zsh_aliases;wget https://raw.githubusercontent.com/spyder6675/vm-setup/main/.zsh_aliases -P /root;source ~/.zshrc;echo Aliases-Updated'
alias update-profilealiases='rm -rf /home/kali/.zsh_aliases;wget https://raw.githubusercontent.com/spyder6675/vm-setup/main/.zsh_aliases -P /home/kali;source ~/.zshrc'
alias update-source='source ~/.zshrc'

# Navigation
alias ll='ls -la'
#alias ..='cd ..'
#alias ...='cd ../..'
# System etc
# alias grep='grep --color=always'
# alias grep='grep -P'
alias ls='ls --color=auto'
alias df='df -h' # 
alias x='exit' # 
alias chx='chmod +x ' 
# 
alias update='sudo apt update -y && sudo apt upgrade -y'
alias pyweb='python3 -m http.server 8080'
# alias nmap="grc nmap" 
alias my-ip='echo $(ifconfig eth0 | grep "inet " | cut -b 9- | cut -d" " -f2)'
alias int-ip='ip -br -c a'
alias ext-ip='curl http://ipecho.net/plain; echo' # Get your external IP address.
alias speedtest='curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -'
alias wtr='curl wttr.in'
alias i="sudo apt install -y "
alias e="nano "
# Nessus 
alias nessus-start='/bin/systemctl start nessusd.service'
alias nessus-stop='/bin/systemctl stop nessusd.service'
alias nessus-restart='/bin/systemctl restart nessusd.service'
alias nessus-status='/bin/systemctl status nessusd.service'
# VPN
alias start-vpn='sudo openvpn /home/kali/Documents/vpn/jasonm@blackhillsinfosec.com.ovpn'
# Password Crackers
alias go-loki='ssh bhis@10.10.174.203 -p 8415'
alias go-logi='ssh bhis@10.10.174.202 -p 8416'
#  SSH
alias nessus-ssh='ssh -L 8834:'$implantip':8834 root@'$implantip''  
alias go-do='ssh root@'$donode'' # Go to Do Node
alias go-implant='ssh root@'$implantip'' # Go to Implantip
# Rsync
alias sync-do='rsync -avz root@'$donode':/root/testing/'*' .'
alias sync-implant='rsync -avz root@'$implantip':/root/testing/'*' .'
# Tailscale 
alias tss='tailscale status'
alias wtss='watch -n 1 tailscale status'
alias rtss='sudo systemctl restart tailscaled.service'
# Nmap
alias nmap-scripts='ls /usr/share/nmap/scripts | grep'
#
# alias untar='tar -zxvf'
# alias tar='tar -zcvf'
alias ns='netstat -tuln'
alias psg='ps aux | grep'
alias msf='msfconsole -q'

# Copy to clipboard
alias clp='xclip -selection c -r'

# hash-check
alias hash-check='cd /opt/Responder/logs && for i in $(cat *-NTLMv2*.txt | cut -d':' -f1 | sort -u) ; do grep --no-filename "$i" *-NTLMv2*.txt | head -n1 ; done > /root/testing/sorted_unique_ntlmv2_hashes.txt ; cat /root/testing/sorted_unique_ntlmv2_hashes.txt | wc ; cd ~/testing'
#
# Responder/logs
alias copy-responderlogs='cp -r /opt/Responder/logs /root/testing/logs/responderlogs'
# Copy Resolve.conf
alias copy-resolvconf='cp /etc/resolv.conf /root/testing/domain-recon/resolv.conf'


#### Functions ####

# Install in Python Virtualenv
install_with_virtualenv() {
    REPO_NAME="$1"
    PYENV="${HOME}/pyenv"
    if [ -d "/opt/${REPO_NAME}" ]; then
        cd "/opt/${REPO_NAME}" || exit 1
        virtualenv -p python3 "${PYENV}/${REPO_NAME}"
        . "${PYENV}/${REPO_NAME}/bin/activate"
        python3 -m pip install -U wheel setuptools
        # first, ensure that requirements.txt deps are installed.
        [[ -f requirements.txt ]] && python3 -m pip install -r requirements.txt
        # python3 setup.py install is deprecated in versions >= python3.9.X
        # python3 -m pip install . will handle the setup.py file for you.
        [[ -f setup.py || -f pyproject.toml ]] && python3 -m pip install .
        deactivate
        cd - &>/dev/null || exit 1
    else
        echo -e "${REPO_NAME} does not exist."
    fi
}

# Download and Install the latest debian10 Nessus amd64
download_and_install_latest_nessus() {
    NESSUS_LATEST_URL=$(curl -s https://www.tenable.com/downloads/api/v2/pages/nessus --header 'accept: application/json' | jq -r '.releases.latest' | jq -r '.[][].file_url' | grep 'Nessus-latest-debian10_amd64.deb')
    [[ ! -d "${HOME}/executables" ]] && mkdir "${HOME}/executables"
    cd "${HOME}/executables" && wget "$NESSUS_LATEST_URL" -O "${HOME}/executables/"Nessus-latest-debian10_amd64.deb
    sudo dpkg -i Nessus-latest-debian10_amd64.deb
    cd "${HOME}"
}

# Download the latest debian10 Nessus amd64
download_latest_nessus() {
    NESSUS_LATEST_URL=$(curl -s https://www.tenable.com/downloads/api/v2/pages/nessus --header 'accept: application/json' | jq -r '.releases.latest' | jq -r '.[][].file_url' | grep 'Nessus-latest-debian10_amd64.deb')
    [[ ! -d "${HOME}/executables" ]] && mkdir "${HOME}/executables"
    wget "$NESSUS_LATEST_URL" -O "${HOME}/executables/"Nessus-latest-debian10_amd64.deb
    # sudo dpkg -i Nessus-latest-debian10_amd64.deb
    # cd "${HOME}"
}





### End of Functions ### 
